rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow restaurant owners to manage their restaurants
    match /restaurants/{restaurantId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.ownerId || 
         !exists(resource.data) && request.auth != null);
    }
    
    // Allow access to digital passes
    match /digitalPasses/{passId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.restaurantId || 
         !exists(resource.data) && request.auth != null);
    }
    
    // Allow access to locations
    match /locations/{locationId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    // Allow anyone to add a diner registration
    match /diners/{dinerId} {
      allow create: if true;
      allow read: if false;
      allow update, delete: if false;
    }

    // Owners collection: only the owner can read/write their own doc
    match /owners/{ownerId} {
      allow read, write: if request.auth != null && request.auth.uid == ownerId;
    }

    // Brands collection: only the owner can read/write
    match /brands/{brandId} {
      allow read, write: if request.auth != null && resource.data.ownerId == request.auth.uid;

      // Locations subcollection: only the owner can read/write
      match /locations/{locationId} {
        allow read, write: if request.auth != null && resource.data.ownerId == request.auth.uid;
      }

      // Passes subcollection: anyone can read, only the owner can write
      match /passes/{passId} {
        allow read: if true;
        allow write: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      }
    }
  }
} 